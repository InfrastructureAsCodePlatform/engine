# Generated by Django 4.1.4 on 2022-12-27 23:44

import django.core.serializers.json
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("projects", "0001_initial"),
        ("credentials", "0001_initial"),
        ("sources", "0001_initial"),
        ("boilerplates", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Deployment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified", models.DateTimeField(auto_now=True, db_index=True)),
                ("name", models.CharField(max_length=32, verbose_name="Name")),
                (
                    "identifier",
                    models.CharField(
                        editable=False,
                        max_length=40,
                        unique=True,
                        verbose_name="Identifier",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "aws_region",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("us-east-2", "US East (Ohio)"),
                            ("us-east-1", "US East (N. Virginia)"),
                            ("us-west-1", "US West (N. California)"),
                            ("us-west-2", "US West (Oregon)"),
                            ("af-south-1", "Africa (Cape Town)"),
                            ("ap-east-1", "Asia Pacific (Hong Kong)"),
                            ("ap-south-2", "Asia Pacific (Hyderabad)"),
                            ("ap-southeast-3", "Asia Pacific (Jakarta)"),
                            ("ap-south-1", "Asia Pacific (Mumbai)"),
                            ("ap-northeast-3", "Asia Pacific (Osaka)"),
                            ("ap-northeast-2", "Asia Pacific (Seoul)"),
                            ("ap-southeast-1", "Asia Pacific (Singapore)"),
                            ("ap-southeast-2", "Asia Pacific (Sydney)"),
                            ("ap-northeast-1", "Asia Pacific (Tokyo)"),
                            ("ca-central-1", "Canada (Central)"),
                            ("eu-central-1", "Europe (Frankfurt)"),
                            ("eu-west-1", "Europe (Ireland)"),
                            ("eu-west-2", "Europe (London)"),
                            ("eu-south-1", "Europe (Milan)"),
                            ("eu-west-3", "Europe (Paris)"),
                            ("eu-south-2", "Europe (Spain)"),
                            ("eu-north-1", "Europe (Stockholm)"),
                            ("eu-central-2", "Europe (Zurich)"),
                            ("me-south-1", "Middle East (Bahrain)"),
                            ("me-central-1", "Middle East (UAE)"),
                            ("sa-east-1", "South America (SÃ£o Paulo)"),
                        ],
                        max_length=16,
                        null=True,
                        verbose_name="AWS_REGION",
                    ),
                ),
                (
                    "branch",
                    models.CharField(blank=True, max_length=32, null=True, verbose_name="Branch"),
                ),
                (
                    "tag",
                    models.CharField(blank=True, max_length=32, null=True, verbose_name="Tag"),
                ),
                (
                    "path",
                    models.CharField(blank=True, max_length=64, null=True, verbose_name="Path"),
                ),
                (
                    "inputs",
                    models.JSONField(
                        blank=True,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        null=True,
                        verbose_name="Inputs",
                    ),
                ),
                (
                    "outputs",
                    models.JSONField(
                        blank=True,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        null=True,
                        verbose_name="Outputs",
                    ),
                ),
                (
                    "boilerplate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="boilerplates.boilerplate",
                    ),
                ),
                (
                    "credential",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="credentials.credential",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.project",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sources.source",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Deployments",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="History",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "inputs",
                    models.JSONField(
                        blank=True,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        null=True,
                        verbose_name="Inputs",
                    ),
                ),
                (
                    "outputs",
                    models.JSONField(
                        blank=True,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        null=True,
                        verbose_name="Outputs",
                    ),
                ),
                ("msg", models.TextField(blank=True, null=True, verbose_name="msg")),
                (
                    "task_id",
                    models.CharField(max_length=128, null=True, verbose_name="task_id"),
                ),
                ("attempt", models.IntegerField(default=0, verbose_name="Attempt")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "pending"),
                            ("processing", "processing"),
                            ("stopped", "stopped"),
                            ("failed", "failed"),
                            ("completed", "completed"),
                        ],
                        db_index=True,
                        default="pending",
                        max_length=16,
                        verbose_name="Status",
                    ),
                ),
                ("logs", models.TextField(blank=True, null=True, verbose_name="Logs")),
                (
                    "deployment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="deployments.deployment",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Histories",
                "ordering": ["-id"],
            },
        ),
    ]
